link_paths:
  - .ackrc
  - .psqlrc
  - .npmrc
  - .gitconfig
  - .gitconfig.dusktreader
  - .systemd-env
  - .config/terminator
  - .config/nvim/init.lua
  - .config/nvim/lua
  - .config/oh-my-posh/dusktreader.omp.yaml
copy_paths:
  - path: .ssh/config
    perms: 0o600
  - path: .ssh/rc
    perms: 0o600
dotfile_paths:
  - .dot_misc
  - .dot_tools_helpers
  - .dot_colors
  - .dotrc
mkdir_paths:
  - .vim/local/backup
  - .vim/local/swap
  - .vim/undodir
tools:
  - name: fucky
    check: "fucky"
    scripts:
      generic: |
        sleep 1
        fucky fuck fuck
  - name: poetry
    check: "poetry --version"
    scripts:
      generic: |
        uv tool install poetry --python=$PYTHON_VERSION
  - name: unzip
    check: "unzip"
    scripts:
      linux: |
        sudo apt install -y unzip
      darwin: |
        sudo port -N install unzip
  - name: oh-my-posh
    check: "oh-my-posh version"
    scripts:
      linux: |
        curl -shttps://github.com/dusktreader https://ohmyposh.dev/install.sh | bash -s
      darwin: |
        sudo port -N install oh-my-posh
  - name: go
    check: "go version"
    scripts:
      linux: |
        sudo snap install go --classic
      darwin: |
        sudo port -N install go
  - name: ripgrep
    check: "rg --version"
    scripts:
      linux: |
        sudo apt install -y ripgrep
        source $HOME/.local/bin/env
      darwin: |
        sudo port -N install ripgrep
        source $HOME/.local/bin/env
  - name: fd-find
    check: "fd --version"
    scripts:
      linux: |
        sudo apt install -y fd-find
      darwin: |
        sudo port -N install fd
  - name: fzf
    check: "fzf --version"
    scripts:
      linux: |
        sudo apt install -y fzf
      darwin: |
        sudo port -N install fzf
  - name: lynx
    check: "lynx --version"
    scripts:
      linux: |
        sudo apt install -y lynx
      darwin: |
        sudo port -N install lynx
  - name: volta
    check: "volta --version"
    scripts:
      generic: |
        curl https://get.volta.sh | bash
  - name: node
    check: "node --version"
    scripts:
      generic: |
        volta install node@20
  - name: npm
    check: "npm --version"
    scripts:
      generic: |
        volta install npm@11.1
  - name: angular
    check: "ng --version"
    scripts:
      generic: |
        npm install -g @angular/cli
  - name: neovim
    check: "nvim --version"
    scripts:
      linux: |
        sudo snap install nvim --classic
      darwin: |
        sudo port -N install neovim
  - name: lua
    check: "lua -v"
    scripts:
      linux: |
        sudo apt install lua5.3
      darwin: |
        sudo port -N install lua
  - name: luarocks
    check: "luarocks --version"
    scripts:
      linux: |
        ver=$(lua -v | awk '{print $2}' | cut -d. -f1,2)
        sudo apt install -y liblua${ver}-dev && \
        pushd /tmp && \
        wget https://luarocks.org/releases/luarocks-3.11.1.tar.gz && \
        tar zxpf luarocks-3.11.1.tar.gz && \
        cd luarocks-3.11.1 && \
        ./configure && \
        make && \
        sudo make install && \
        popd
      darwin: |
        ver=$(lua -v | awk '{print $2}' | cut -d. -f1,2)
        pkg=$(echo $ver | perl -pe 's/(\d)\.(\d)/lua\1\2-luarocks/g')
        sudo port -N install $pkg
  - name: rustup
    check: "rustup --version"
    scripts:
      generic: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
  - name: github cli
    check: "gh --version"
    scripts:
      linux: |
        (type -p wget >/dev/null || (sudo apt update && sudo apt-get install wget -y)) && \
        sudo mkdir -p -m 755 /etc/apt/keyrings && \
          out=$(mktemp) && \
          wget -nv -O$out https://cli.github.com/packages/githubcli-archive-keyring.gpg && \
          cat $out | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null && \
        sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg && \
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null && \
        sudo apt update && \
        sudo apt install gh -y
      darwin: |
        sudo port -N install gh
  - name: 1password-cli
    check: "op --version"
    scripts:
      linux: |
        curl -sS https://downloads.1password.com/linux/keys/1password.asc | \
          sudo gpg --dearmor --yes --output /usr/share/keyrings/1password-archive-keyring.gpg && \
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/1password-archive-keyring.gpg] https://downloads.1password.com/linux/debian/$(dpkg --print-architecture) stable main" | \
          sudo tee /etc/apt/sources.list.d/1password.list && \
          sudo mkdir -p /etc/debsig/policies/AC2D62742012EA22/ && \
          curl -sS https://downloads.1password.com/linux/debian/debsig/1password.pol | \
          sudo tee /etc/debsig/policies/AC2D62742012EA22/1password.pol && \
          sudo mkdir -p /usr/share/debsig/keyrings/AC2D62742012EA22 && \
          curl -sS https://downloads.1password.com/linux/keys/1password.asc | \
          sudo gpg --dearmor --output /usr/share/debsig/keyrings/AC2D62742012EA22/debsig.gpg && \
          sudo apt update && sudo apt install 1password-cli
      darwin: |
        sudo port -N install 1password-cli
  - name: pgcli
    check: "pgcli --version"
    scripts:
      linux: |
        sudo apt install libpq-dev python-dev
        uv tool install pgcli
      darwin: |
        sudo port -N install pgcli
  - name: usql
    check: "usql --version"
    scripts:
      linux: |
        go install -tags most github.com/xo/usql@latest
      darwin: |
        sudo port -N install usql
  - name: aws-cli
    check: "aws --version"
    scripts:
      linux: |
        sudo snap install aws-cli --classic
      darwin: |
        curl "https://awscli.amazonaws.com/AWSCLIV2.pkg" -o "AWSCLIV2.pkg"
        sudo installer -pkg AWSCLIV2.pkg -target /
